package dev.shanuka.thesweetcupcakeshop.view.forms;

import dev.shanuka.thesweetcupcakeshop.exception.ApplicationError;
import dev.shanuka.thesweetcupcakeshop.exception.NotFoundError;
import dev.shanuka.thesweetcupcakeshop.service.AuthService;
import dev.shanuka.thesweetcupcakeshop.util.Fonts;
import dev.shanuka.thesweetcupcakeshop.util.FormManager;
import dev.shanuka.thesweetcupcakeshop.util.InputlValidator;
import dev.shanuka.thesweetcupcakeshop.util.Messages;
import dev.shanuka.thesweetcupcakeshop.util.PlaceholderManager;
import java.awt.Color;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 * Handles user authentication and input validation
 * 
 * @author Shanuka
 */
public class Login extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Login.class.getName());

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        
        focusMainPanel();
        
        // Set the application icon
        FormManager.setAppIcon(this);
        
        // Apply custom fonts to different components
        welcomeLabel.setFont(Fonts.robotoBold.deriveFont(34f));
        emailTextField.setFont(Fonts.robotoRegular.deriveFont(18f));
        passwordTextField.setFont(Fonts.robotoRegular.deriveFont(18f));
        loginBtn.setFont(Fonts.robotoMedium.deriveFont(21f));
        loginBtn.setForeground(Color.WHITE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        featuredImage = new javax.swing.JLabel();
        content = new javax.swing.JPanel();
        email = new javax.swing.JPanel();
        emailTextField = new javax.swing.JTextField();
        emailIcn = new javax.swing.JLabel();
        passwordPanel = new javax.swing.JPanel();
        passwordIcn = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        welcomeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 252, 239));
        setLocationByPlatform(true);
        setResizable(false);
        setSize(new java.awt.Dimension(960, 540));

        mainPanel.setBackground(new java.awt.Color(255, 252, 239));
        mainPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainPanelMouseClicked(evt);
            }
        });

        featuredImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/featured_image.png"))); // NOI18N

        content.setBackground(new java.awt.Color(255, 252, 239));
        content.setForeground(new java.awt.Color(255, 252, 239));

        email.setBackground(new java.awt.Color(255, 255, 255));
        email.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(228, 228, 228), 1, true));
        email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailMouseClicked(evt);
            }
        });

        emailTextField.setBackground(new java.awt.Color(255, 255, 255));
        emailTextField.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        emailTextField.setForeground(new java.awt.Color(148, 148, 148));
        emailTextField.setText("Email");
        emailTextField.setBorder(null);
        emailTextField.setMargin(new java.awt.Insets(2, 10, 2, 6));
        emailTextField.setName("emailField"); // NOI18N
        emailTextField.setNextFocusableComponent(passwordTextField);
        emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusLost(evt);
            }
        });

        emailIcn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/email_icon.png"))); // NOI18N
        emailIcn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout emailLayout = new javax.swing.GroupLayout(email);
        email.setLayout(emailLayout);
        emailLayout.setHorizontalGroup(
            emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emailLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(emailIcn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        emailLayout.setVerticalGroup(
            emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emailLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailIcn))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        passwordPanel.setBackground(new java.awt.Color(255, 255, 255));
        passwordPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(228, 228, 228), 1, true));
        passwordPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordPanelMouseClicked(evt);
            }
        });

        passwordIcn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/password_icon.png"))); // NOI18N
        passwordIcn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordIcnMouseClicked(evt);
            }
        });

        passwordTextField.setBackground(new java.awt.Color(255, 255, 255));
        passwordTextField.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        passwordTextField.setForeground(new java.awt.Color(148, 148, 148));
        passwordTextField.setText("Password");
        passwordTextField.setBorder(null);
        passwordTextField.setMargin(new java.awt.Insets(2, 10, 2, 6));
        passwordTextField.setName("passwordField"); // NOI18N
        passwordTextField.setNextFocusableComponent(loginBtn);
        passwordTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTextFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout passwordPanelLayout = new javax.swing.GroupLayout(passwordPanel);
        passwordPanel.setLayout(passwordPanelLayout);
        passwordPanelLayout.setHorizontalGroup(
            passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(passwordIcn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        passwordPanelLayout.setVerticalGroup(
            passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordIcn))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        loginBtn.setBackground(new java.awt.Color(154, 2, 21));
        loginBtn.setFont(new java.awt.Font("Roboto", 1, 21)); // NOI18N
        loginBtn.setLabel("Login");
        loginBtn.setNextFocusableComponent(emailTextField);
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(passwordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(loginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addContainerGap())
        );

        loginBtn.getAccessibleContext().setAccessibleName("Login Button");
        loginBtn.getAccessibleContext().setAccessibleDescription("");

        welcomeLabel.setFont(new java.awt.Font("Segoe UI", 1, 32)); // NOI18N
        welcomeLabel.setForeground(new java.awt.Color(44, 41, 49));
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setText("Welcome Back!");
        welcomeLabel.setAlignmentX(0.5F);
        welcomeLabel.setDoubleBuffered(true);
        welcomeLabel.setFocusable(false);
        welcomeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setIconTextGap(0);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(featuredImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(featuredImage)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(welcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        featuredImage.getAccessibleContext().setAccessibleName("");
        welcomeLabel.getAccessibleContext().setAccessibleName("");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Focus email field when either parent panel or the email icon is clicked
    private void emailIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailIconMouseClicked
        emailTextField.requestFocus();
    }//GEN-LAST:event_emailIconMouseClicked

    private void emailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailMouseClicked
        emailTextField.requestFocus();
    }//GEN-LAST:event_emailMouseClicked

    // Focus password field when either parent panel or the password icon is clicked
    private void passwordPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordPanelMouseClicked
        passwordTextField.requestFocus();
    }//GEN-LAST:event_passwordPanelMouseClicked

    private void passwordIcnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordIcnMouseClicked
        passwordTextField.requestFocus();
    }//GEN-LAST:event_passwordIcnMouseClicked

    // Remove the placeholder as the email field has gained focus
    private void emailTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusGained
        PlaceholderManager.removePlaceholder((JTextField) evt.getComponent());
    }//GEN-LAST:event_emailTextFieldFocusGained

    // Restore the placeholder as the email field has lost focus
    private void emailTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusLost
        PlaceholderManager.addPlaceholder((JTextField) evt.getComponent());
    }//GEN-LAST:event_emailTextFieldFocusLost

    // Remove the placeholder as the password field has gained focus
    private void passwordTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFieldFocusGained
        PlaceholderManager.removePlaceholder((JTextField) evt.getComponent());
    }//GEN-LAST:event_passwordTextFieldFocusGained

    // Restore the placeholder as the password field has lost focus
    private void passwordTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFieldFocusLost
        PlaceholderManager.addPlaceholder((JTextField) evt.getComponent());
    }//GEN-LAST:event_passwordTextFieldFocusLost

    // Focus main panel once the user has clicked the main panel.
    // The main purpose of this is to focus out of the email and password fields when anywhere outside them is clicked.
    private void mainPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMouseClicked
        focusMainPanel();
    }//GEN-LAST:event_mainPanelMouseClicked

    // When the login button is being clicked
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        String email = emailTextField.getText();
        String password = passwordTextField.getText();
        
        // If email is empty or in an invalid format
        if(!InputlValidator.validateEmail(email)) {
            Messages.showError(this, "Input Error", "Please enter a valid email to continue");            
            return; // Exit the method
        }
        
        // If password field is empty
        if (passwordTextField.getText().isBlank()) {
            Messages.showError(this, "Input Error", "Please enter the password to continue");
            return; // Exit the method
        }
        
        try {
            // If both inputs are provided, proceed to login.
            boolean isLoginSuccess = AuthService.login(email, password);
            
            // If passwords doesn't match
            if(!isLoginSuccess) {
                Messages.showError(this, "Incorrect Password", "The password you entered is invalid");
                return;
            }
            
            // If none of the errors haven't occured
            // Show the login form asynchronously
            SwingUtilities.invokeLater(() -> {
                FormManager.ShowForm(FormManager.getDashboardForm(), this);
            });
        } 
        
        // If a user with the given email cannot be found
        catch (NotFoundError ex) {
            Messages.showError(this, "Email Not Registered", "The entered email is not associated with any user");
        } 
        
        // If an unexpected error has been occured
        catch (ApplicationError ex) {
            Messages.showError(this, "Unexpected Error", "An unexpected error has been occured");
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    // Bring the focus to the main form in order to focus out the input fields.
    private void focusMainPanel() {
        this.setFocusable(true);
        this.requestFocusInWindow();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Login().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel content;
    private javax.swing.JPanel email;
    private javax.swing.JLabel emailIcn;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel featuredImage;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel passwordIcn;
    private javax.swing.JPanel passwordPanel;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
